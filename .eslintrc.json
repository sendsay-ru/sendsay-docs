{
  "env": {
    "browser": true,
    "es2020": true,
    "node": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js",".jsx", ".ts", ".tsx"]
      }
    }
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "import"],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "@typescript-eslint/no-var-requires": "off",
    "react/prop-types": "off",
    "class-methods-use-this": "off",
    "no-mixed-spaces-and-tabs": "off",
    "no-unused-vars": [
      "warn",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }
    ],
    "no-param-reassign": "error",
    "camelcase": "error",
    "no-duplicate-imports": "error",
    "no-undef": "off",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ],
    "import/prefer-default-export": "off",
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "react**",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "redux**",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": ".*/**/*.scss",
            "group": "index",
            "position": "after"
          }
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}
